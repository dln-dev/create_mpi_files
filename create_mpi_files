#!/bin/bash

# regexes for positive integers and lower case characters
pos_int_regex='[0-9]+'
lc_char_regex='[a-z]+'


if [[ ($# -ne 2) || !($1 =~ $pos_int_regex) || !($2 =~ $lc_char_regex) ]]
then
    echo "
Usage: create_mpi_files <processors> <name>

This script creates <processors> mpi files named after the feap input file <name>. 
Filenames and extensions must be of equal length for FE^2, so leading zeros are 
prepended to match the number of digits in <processors>.

Example:
         create_mpi_files 128 test     # creates 128 files test.001, test.002 ...
"
else
    # get number of digits in processors
    digits=$(expr length "$1")

    # preformat string for printf
    # %0Nd means leading zeros such that there are N digits,
    # d for integers, %s gets replaced by the next variable in printf
    leading_zero_string="%0"$digits"d%s"

    # loop parameter
    k=1

    # prefill first file with mpi directive
    echo "nocount
ufeap * * Test on file input for fine scale.
    
include solve_mpi

stop" > $2.`printf $leading_zero_string $k`;

    # copy and rename files accordingly
    while [ $k -lt $1 ]; do
        cp $2.`printf $leading_zero_string $k` $2.`printf $leading_zero_string $[$k+1]`
        let k=k+1
    done
fi
